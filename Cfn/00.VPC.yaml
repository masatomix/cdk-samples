AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Template 
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: VPC CIDRs
      Parameters:
      - VPCCIDR
      - PublicSubnetCIDR01
      - PrivateSubnetCIDR01
      - PublicSubnetCIDR02
      - PrivateSubnetCIDR02
      - PublicSubnetCIDR03
      - PrivateSubnetCIDR03

    ParameterLabels:
      VPCCIDR:
        default: "VPC CIDR"
      PublicSubnetCIDR01:
        default: "Public Subnet 01"
      PrivateSubnetCIDR01:
        default: "Private Subnet 01"
      PublicSubnetCIDR02:
        default: "Public Subnet 02"
      PrivateSubnetCIDR02:
        default: "Private Subnet 02"
      PublicSubnetCIDR03:
        default: "Public Subnet 03"
      PrivateSubnetCIDR03:
        default: "Private Subnet 03"

Parameters:
  # VPC and subnet CIDRs
  VPCCIDR:
    Description: "VPC CIDR.recommend /16"
    Default: "192.168.0.0/16"
    Type: String

  PublicSubnetCIDR01:
    Description: "Public CIDR.recommend /24"
    Default: "192.168.0.0/24"
    Type: String

  PrivateSubnetCIDR01:
    Description: "Private CIDR.recommend /24"
    Default: "192.168.1.0/24"
    Type: String

  PublicSubnetCIDR02:
    Description: "Public CIDR.recommend /24"
    Default: "192.168.2.0/24"
    Type: String

  PrivateSubnetCIDR02:
    Description: "Private CIDR.recommend /24"
    Default: "192.168.3.0/24"
    Type: String

  PublicSubnetCIDR03:
    Description: "Public CIDR.recommend /24"
    Default: "192.168.4.0/24"
    Type: String

  PrivateSubnetCIDR03:
    Description: "Private CIDR.recommend /24"
    Default: "192.168.5.0/24"
    Type: String

Resources:
# --------------------------------------
# VPC - Subnet Creation
# --------------------------------------
## VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-VPC'
## VPC
## Subnet
  MyPublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnetCIDR01
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-northeast-1a
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-public-001'

  MyPrivateSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnetCIDR01
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1a
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-private-001'

  MyPublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnetCIDR02
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-northeast-1c
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-public-002'

  MyPrivateSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnetCIDR02
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1c
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-private-002'

  MyPublicSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnetCIDR03
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-northeast-1d
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-public-003'

  MyPrivateSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnetCIDR03
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1d
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-private-003'


## Subnet

# --------------------------------------
# GateWay Creation
# --------------------------------------
## InternetGateway
  MyInternetGateWay:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-igw'

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateWay

## EIP for NatGateway
  EIPforNatGw1:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  MyNAT1:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPforNatGw1.AllocationId
      SubnetId: !Ref MyPublicSubnet01
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-nat1'

  EIPforNatGw2:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  MyNAT2:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPforNatGw2.AllocationId
      SubnetId: !Ref MyPublicSubnet02
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-nat2'          

  EIPforNatGw3:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  MyNAT3:
    DependsOn: AttachGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPforNatGw3.AllocationId
      SubnetId: !Ref MyPublicSubnet03
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-nat3'
## GateWay

# --------------------------------------
# Route Info Creation
# --------------------------------------
## RouteTable
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-public-route'

  PrivateRouteTable01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-private-route-01'

  PrivateRouteTable02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-private-route-02'

  PrivateRouteTable03:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-private-route-03'

## Attach RouteTable
  SubnetRouteTableAssociation01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId:     !Ref MyPublicSubnet01

  SubnetRouteTableAssociation02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable01
      SubnetId:     !Ref MyPrivateSubnet01

  SubnetRouteTableAssociation03:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId:     !Ref MyPublicSubnet02

  SubnetRouteTableAssociation04:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable02
      SubnetId:     !Ref MyPrivateSubnet02

  SubnetRouteTableAssociation05:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId:     !Ref MyPublicSubnet03

  SubnetRouteTableAssociation06:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable03
      SubnetId:     !Ref MyPrivateSubnet03
## RouteTable

## Route
  RouteToIGW:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateWay

  RouteToNAT1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable01
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNAT1

  RouteToNAT2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable02
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNAT2

  RouteToNAT3:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable03
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNAT3
## Route

